{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Florencia\\\\OneDrive\\\\Escritorio\\\\rick_and_morty\\\\src\\\\components\\\\views\\\\Detail\\\\Detail.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\"; //hace peticiones, el fetch retorna un http reuquest, con axios nos salteamos esa conversion al json\nimport { useParams } from \"react-router-dom\";\nimport style from \"./Detail.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Detail() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [character, setCharacter] = useState({});\n  useEffect(() => {\n    // cuando se monta el componente ejecuta el codigo que busca el personaje\n    axios(`https://rickandmortyapi.com/api/character/${id}`).then(_ref => {\n      let {\n        data\n      } = _ref;\n      // cada vez que este id sea diferente vuelve a ejec el useEffect\n      if (data.name) {\n        setCharacter(data);\n      } else {\n        window.alert('No hay personajes con ese ID');\n      }\n    });\n    return setCharacter({}); // cuando se desmonta, osea cuando salimos, ejecuta el return, limpia el personaje\n  }, [id]); // como dependencia usa el id\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.detail,\n    children: character.name &&\n    /*#__PURE__*/\n    // este condicional dice, si existe el personaje.name se renderiza el resto\n    _jsxDEV(\"div\", {\n      children: [character.name && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: character.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 36\n      }, this), \"  \", character.image && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: style.img,\n        src: character.image,\n        alt: character.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 37\n      }, this), character.species && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Specie: \", character.species]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 39\n      }, this), character.status && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Status: \", character.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 38\n      }, this), character.gender && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Gender: \", character.gender]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 38\n      }, this), character.origin.name && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Origin: \", character.origin.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(Detail, \"fR6uIhTjIVaIqfngtFT7juNjp60=\", false, function () {\n  return [useParams];\n});\n_c = Detail;\nexport default Detail;\nvar _c;\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","style","jsxDEV","_jsxDEV","Detail","_s","id","character","setCharacter","then","_ref","data","name","window","alert","className","detail","children","fileName","_jsxFileName","lineNumber","columnNumber","image","img","src","alt","species","status","gender","origin","_c","$RefreshReg$"],"sources":["C:/Users/Florencia/OneDrive/Escritorio/rick_and_morty/src/components/views/Detail/Detail.jsx"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport axios from \"axios\";  //hace peticiones, el fetch retorna un http reuquest, con axios nos salteamos esa conversion al json\r\nimport { useParams } from \"react-router-dom\";\r\nimport style from \"./Detail.module.css\";\r\n\r\nfunction Detail() {\r\n    const {id} = useParams();\r\n    const [character, setCharacter] = useState({});\r\n\r\n    useEffect(() => {   // cuando se monta el componente ejecuta el codigo que busca el personaje\r\n        axios(`https://rickandmortyapi.com/api/character/${id}`).then(({ data }) => {  // cada vez que este id sea diferente vuelve a ejec el useEffect\r\n        if (data.name) {\r\n            setCharacter(data);\r\n        } else {\r\n            window.alert('No hay personajes con ese ID');\r\n        }\r\n        });\r\n         return setCharacter({});   // cuando se desmonta, osea cuando salimos, ejecuta el return, limpia el personaje\r\n    }, [id]);  // como dependencia usa el id\r\n\r\n\r\n    return (\r\n    <div className= {style.detail}>\r\n        {character.name && (  // este condicional dice, si existe el personaje.name se renderiza el resto\r\n            <div>\r\n                {character.name && <h1>{character.name}</h1>}  {/*es este condicional decimos que si tiene ese dato se renderice*/}\r\n                {character.image && <img className= {style.img} src= {character.image} alt={character.name} />}\r\n                {character.species && <h2>Specie: {character.species}</h2>}\r\n                {character.status && <h2>Status: {character.status}</h2>}\r\n                {character.gender && <h2>Gender: {character.gender}</h2>}\r\n                {character.origin.name && <h2>Origin: {character.origin.name}</h2>}\r\n            </div>\r\n        )}\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Detail;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}