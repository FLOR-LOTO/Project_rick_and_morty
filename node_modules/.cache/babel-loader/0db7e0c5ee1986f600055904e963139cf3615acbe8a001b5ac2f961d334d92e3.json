{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Florencia\\\\OneDrive\\\\Documentos\\\\FT-M2\\\\06-React-Intro\\\\homework\\\\02 - Integration\\\\src\\\\components\\\\SearchBar.jsx\",\n  _s = $RefreshSig$();\nimport style from \"./SearchBar.module.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = props => {\n  _s();\n  const [characters, setCharacters] = useState(\"\"); // cuando se trata del input va string vacio\n\n  const handleChange = event => {\n    // todo lo que escribamos lo vamos seteando\n    setCharacters(event.target.value); //esto es siempre asi con el input\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.navBar,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: style.input,\n      type: \"Search\",\n      value: character,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: style.buttonSearch,\n      onClick: () => props.onSearch(characters),\n      children: \"Agregar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 10\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Integrating project: Rick and Morty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }, this);\n};\n_s(SearchBar, \"e82KIS+Gg0elUbjlleowAmjJPuo=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["style","useState","jsxDEV","_jsxDEV","SearchBar","props","_s","characters","setCharacters","handleChange","event","target","value","className","navBar","children","id","input","type","character","onChange","fileName","_jsxFileName","lineNumber","columnNumber","buttonSearch","onClick","onSearch","_c","$RefreshReg$"],"sources":["C:/Users/Florencia/OneDrive/Documentos/FT-M2/06-React-Intro/homework/02 - Integration/src/components/SearchBar.jsx"],"sourcesContent":["import style from \"./SearchBar.module.css\";\r\nimport {useState} from \"react\";\r\n\r\nconst SearchBar = (props) => {\r\n   const [ characters, setCharacters] = useState (\"\") // cuando se trata del input va string vacio\r\n\r\n   const handleChange = (event) => { // todo lo que escribamos lo vamos seteando\r\n      setCharacters(event.target.value)  //esto es siempre asi con el input\r\n   };\r\n\r\n   return (\r\n      <div className= {style.navBar}>\r\n         <input id= {style.input} type='Search' value= {character} onChange= {handleChange}/>\r\n         <button id={style.buttonSearch} onClick={() =>props.onSearch(characters)}>Agregar</button> {/**la arrow fc evita que, si paso un param. la funcion se ejecute inmediatamente sin hacer click */}\r\n         <h1>Integrating project: Rick and Morty</h1>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default SearchBar;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,wBAAwB;AAC1C,SAAQC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC1B,MAAM,CAAEC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAE,EAAE,CAAC,EAAC;;EAEnD,MAAMQ,YAAY,GAAIC,KAAK,IAAK;IAAE;IAC/BF,aAAa,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,EAAE;EACtC,CAAC;;EAED,oBACGT,OAAA;IAAKU,SAAS,EAAGb,KAAK,CAACc,MAAO;IAAAC,QAAA,gBAC3BZ,OAAA;MAAOa,EAAE,EAAGhB,KAAK,CAACiB,KAAM;MAACC,IAAI,EAAC,QAAQ;MAACN,KAAK,EAAGO,SAAU;MAACC,QAAQ,EAAGX;IAAa;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACpFrB,OAAA;MAAQa,EAAE,EAAEhB,KAAK,CAACyB,YAAa;MAACC,OAAO,EAAEA,CAAA,KAAKrB,KAAK,CAACsB,QAAQ,CAACpB,UAAU,CAAE;MAAAQ,QAAA,EAAC;IAAO;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,KAAC,eAC3FrB,OAAA;MAAAY,QAAA,EAAI;IAAmC;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEZ,CAAC;AAAAlB,EAAA,CAdKF,SAAS;AAAAwB,EAAA,GAATxB,SAAS;AAgBf,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}