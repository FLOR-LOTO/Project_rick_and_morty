{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Florencia\\\\OneDrive\\\\Escritorio\\\\rick_and_morty\\\\src\\\\components\\\\Detail.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\"; //hace peticiones, el fetch retorna un http reuquest, con axios nos salteamos esa conversion al json\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Detail() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [character, setCharacter] = useState({});\n  useEffect(() => {\n    // cuando se monta el componente ejecuta el codigo que busca el personaje\n    axios(`https://rickandmortyapi.com/api/character/${id}`).then(_ref => {\n      let {\n        data\n      } = _ref;\n      // cada vez que este id sea diferente vuelve a ejec el useEffect\n      if (data.name) {\n        setCharacter(data);\n      } else {\n        window.alert('No hay personajes con ese ID');\n      }\n    });\n    return setCharacter({}); // cuando se desmonta, osea cuando salimos, ejecuta el return, limpia el personaje\n  }, [id]); // como dependencia usa el id\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Holasss\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Detail, \"fR6uIhTjIVaIqfngtFT7juNjp60=\", false, function () {\n  return [useParams];\n});\n_c = Detail;\nexport default Detail;\nvar _c;\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","jsxDEV","_jsxDEV","Detail","_s","id","character","setCharacter","then","_ref","data","name","window","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Florencia/OneDrive/Escritorio/rick_and_morty/src/components/Detail.jsx"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport axios from \"axios\";  //hace peticiones, el fetch retorna un http reuquest, con axios nos salteamos esa conversion al json\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction Detail() {\r\n    const {id} = useParams();\r\n    const [character, setCharacter] = useState({});\r\n\r\n    useEffect(() => {   // cuando se monta el componente ejecuta el codigo que busca el personaje\r\n        axios(`https://rickandmortyapi.com/api/character/${id}`).then(({ data }) => {  // cada vez que este id sea diferente vuelve a ejec el useEffect\r\n        if (data.name) {\r\n            setCharacter(data);\r\n        } else {\r\n            window.alert('No hay personajes con ese ID');\r\n        }\r\n        });\r\n        return setCharacter({});   // cuando se desmonta, osea cuando salimos, ejecuta el return, limpia el personaje\r\n    }, [id]);  // como dependencia usa el id\r\n\r\n\r\n    return (\r\n    <div>\r\n        <p>Holasss</p>    \r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Detail;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAE;AAC5B,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM;IAACC;EAAE,CAAC,GAAGL,SAAS,CAAC,CAAC;EACxB,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE9CC,SAAS,CAAC,MAAM;IAAI;IAChBC,KAAK,CAAE,6CAA4CM,EAAG,EAAC,CAAC,CAACG,IAAI,CAACC,IAAA,IAAc;MAAA,IAAb;QAAEC;MAAK,CAAC,GAAAD,IAAA;MAAQ;MAC/E,IAAIC,IAAI,CAACC,IAAI,EAAE;QACXJ,YAAY,CAACG,IAAI,CAAC;MACtB,CAAC,MAAM;QACHE,MAAM,CAACC,KAAK,CAAC,8BAA8B,CAAC;MAChD;IACA,CAAC,CAAC;IACF,OAAON,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAG;EAC/B,CAAC,EAAE,CAACF,EAAE,CAAC,CAAC,CAAC,CAAE;;EAGX,oBACAH,OAAA;IAAAY,QAAA,eACIZ,OAAA;MAAAY,QAAA,EAAG;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV;AAACd,EAAA,CArBQD,MAAM;EAAA,QACEH,SAAS;AAAA;AAAAmB,EAAA,GADjBhB,MAAM;AAuBf,eAAeA,MAAM;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}