{"ast":null,"code":"import _slicedToArray from\"C:/Users/Florencia/OneDrive/Escritorio/rick_and_morty/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import axios from\"axios\";//hace peticiones, el fetch retorna un http reuquest, con axios nos salteamos esa conversion al json\nimport{useParams}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Detail(){var _useParams=useParams(),id=_useParams.id;var _useState=useState({}),_useState2=_slicedToArray(_useState,2),character=_useState2[0],setCharacter=_useState2[1];useEffect(function(){// cuando se monta el componente ejecuta el codigo que busca el personaje\naxios(\"https://rickandmortyapi.com/api/character/\".concat(id)).then(function(_ref){var data=_ref.data;// cada vez que este id sea diferente vuelve a ejec el useEffect\nif(data.name){setCharacter(data);}else{window.alert('No hay personajes con ese ID');}});return setCharacter({});// cuando se desmonta, osea cuando salimos, ejecuta el return, limpia el personaje\n},[id]);// como dependencia usa el id\nreturn/*#__PURE__*/_jsx(\"div\",{children:character.name&&/*#__PURE__*/ // este condicional dice, si existe el personaje.name se renderiza el resto\n_jsxs(\"div\",{children:[character.name&&/*#__PURE__*/_jsx(\"h1\",{children:character.name}),\"  \",character.image&&/*#__PURE__*/_jsx(\"img\",{src:character.image,alt:character.name}),character.species&&/*#__PURE__*/_jsxs(\"h2\",{children:[\"Specie: \",character.species]}),character.status&&/*#__PURE__*/_jsxs(\"h2\",{children:[\"Status: \",character.status]}),character.gender&&/*#__PURE__*/_jsxs(\"h2\",{children:[\"Gender: \",character.gender]}),character.origin.name&&/*#__PURE__*/_jsxs(\"h2\",{children:[\"Origin: \",character.origin.name]})]})});}export default Detail;","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","jsx","_jsx","jsxs","_jsxs","Detail","_useParams","id","_useState","_useState2","_slicedToArray","character","setCharacter","concat","then","_ref","data","name","window","alert","children","image","src","alt","species","status","gender","origin"],"sources":["C:/Users/Florencia/OneDrive/Escritorio/rick_and_morty/src/components/views/Detail/Detail.jsx"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport axios from \"axios\";  //hace peticiones, el fetch retorna un http reuquest, con axios nos salteamos esa conversion al json\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction Detail() {\r\n    const {id} = useParams();\r\n    const [character, setCharacter] = useState({});\r\n\r\n    useEffect(() => {   // cuando se monta el componente ejecuta el codigo que busca el personaje\r\n        axios(`https://rickandmortyapi.com/api/character/${id}`).then(({ data }) => {  // cada vez que este id sea diferente vuelve a ejec el useEffect\r\n        if (data.name) {\r\n            setCharacter(data);\r\n        } else {\r\n            window.alert('No hay personajes con ese ID');\r\n        }\r\n        });\r\n         return setCharacter({});   // cuando se desmonta, osea cuando salimos, ejecuta el return, limpia el personaje\r\n    }, [id]);  // como dependencia usa el id\r\n\r\n\r\n    return (\r\n    <div>\r\n        {character.name && (  // este condicional dice, si existe el personaje.name se renderiza el resto\r\n            <div>\r\n                {character.name && <h1>{character.name}</h1>}  {/*es este condicional decimos que si tiene ese dato se renderice*/}\r\n                {character.image && <img src= {character.image} alt={character.name} />}\r\n                {character.species && <h2>Specie: {character.species}</h2>}\r\n                {character.status && <h2>Status: {character.status}</h2>}\r\n                {character.gender && <h2>Gender: {character.gender}</h2>}\r\n                {character.origin.name && <h2>Origin: {character.origin.name}</h2>}\r\n            </div>\r\n        )}\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Detail;"],"mappings":"2IAAA,MAAO,CAAAA,KAAK,EAAGC,QAAQ,CAAEC,SAAS,KAAO,OAAO,CAChD,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAG;AAC5B,OAASC,SAAS,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE7C,QAAS,CAAAC,MAAMA,CAAA,CAAG,CACd,IAAAC,UAAA,CAAaN,SAAS,CAAC,CAAC,CAAjBO,EAAE,CAAAD,UAAA,CAAFC,EAAE,CACT,IAAAC,SAAA,CAAkCX,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAAY,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAvCG,SAAS,CAAAF,UAAA,IAAEG,YAAY,CAAAH,UAAA,IAE9BX,SAAS,CAAC,UAAM,CAAI;AAChBC,KAAK,8CAAAc,MAAA,CAA8CN,EAAE,CAAE,CAAC,CAACO,IAAI,CAAC,SAAAC,IAAA,CAAc,IAAX,CAAAC,IAAI,CAAAD,IAAA,CAAJC,IAAI,CAAU;AAC/E,GAAIA,IAAI,CAACC,IAAI,CAAE,CACXL,YAAY,CAACI,IAAI,CAAC,CACtB,CAAC,IAAM,CACHE,MAAM,CAACC,KAAK,CAAC,8BAA8B,CAAC,CAChD,CACA,CAAC,CAAC,CACD,MAAO,CAAAP,YAAY,CAAC,CAAC,CAAC,CAAC,CAAI;AAChC,CAAC,CAAE,CAACL,EAAE,CAAC,CAAC,CAAG;AAGX,mBACAL,IAAA,QAAAkB,QAAA,CACKT,SAAS,CAACM,IAAI,gBAAO;AAClBb,KAAA,QAAAgB,QAAA,EACKT,SAAS,CAACM,IAAI,eAAIf,IAAA,OAAAkB,QAAA,CAAKT,SAAS,CAACM,IAAI,CAAK,CAAC,CAAC,IAAE,CAC9CN,SAAS,CAACU,KAAK,eAAInB,IAAA,QAAKoB,GAAG,CAAGX,SAAS,CAACU,KAAM,CAACE,GAAG,CAAEZ,SAAS,CAACM,IAAK,CAAE,CAAC,CACtEN,SAAS,CAACa,OAAO,eAAIpB,KAAA,OAAAgB,QAAA,EAAI,UAAQ,CAACT,SAAS,CAACa,OAAO,EAAK,CAAC,CACzDb,SAAS,CAACc,MAAM,eAAIrB,KAAA,OAAAgB,QAAA,EAAI,UAAQ,CAACT,SAAS,CAACc,MAAM,EAAK,CAAC,CACvDd,SAAS,CAACe,MAAM,eAAItB,KAAA,OAAAgB,QAAA,EAAI,UAAQ,CAACT,SAAS,CAACe,MAAM,EAAK,CAAC,CACvDf,SAAS,CAACgB,MAAM,CAACV,IAAI,eAAIb,KAAA,OAAAgB,QAAA,EAAI,UAAQ,CAACT,SAAS,CAACgB,MAAM,CAACV,IAAI,EAAK,CAAC,EACjE,CACR,CACA,CAAC,CAEV,CAEA,cAAe,CAAAZ,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}